version: "3.8"

services:
  mongo:
    container_name: mongo-park_tech-dev
    image: mongo
    restart: always
    volumes:
      - mongodb_dev:/data/db
      - ./docker-init/mongo-config/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
#    environment:
#      MONGO_INITDB_ROOT_USERNAME: park_tech
#      MONGO_INITDB_ROOT_PASSWORD: park_tech
#      MONGO_INITDB_DATABASE: park_tech

    env_file:
      - docker-init/.env-mongodb
    command: [--auth]
    ports:
      - "27017:27017"
    networks:
      - spring-docker-compose-dev

  mongo-express:
    container_name: mongo-express-park_tech-dev
    image: mongo-express
    restart: always
    depends_on:
      - mongo
#    environment:
#      ME_CONFIG_MONGODB_SERVER: mongo-park_tech-dev
#      ME_CONFIG_MONGODB_ADMINUSERNAME: park_tech
#      ME_CONFIG_MONGODB_ADMINPASSWORD: park_tech
#      ME_CONFIG_BASICAUTH_USERNAME: park_tech
#      ME_CONFIG_BASICAUTH_PASSWORD: park_tech
#      ME_CONFIG_MONGODB_URL: mongodb://park_tech:park_tech@mongo:27017/
    env_file:
      - docker-init/.env-mongoexpress
    ports:
      - 8081:8081
    networks:
      - spring-docker-compose-dev

volumes:
  mongodb_dev:

networks:
  spring-docker-compose-dev:
    driver: bridge