name: Create release test

on:
  pull_request:
    types:
      - closed
    paths:
      - park-tech/**

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    if: contains(github.head_ref, 'develop-test') && contains(github.base_ref, 'teste') && github.event.action == 'closed' && github.event.pull_request.merged == true
    name: Test
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    permissions:
      contents: read
      packages: write

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set up JDK 17
        id: set-up-jdk
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          server-id: github
          settings-path: ${{ github.workspace }}

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2-

      - name: Build with Maven
        run: mvn test --file pom.xml

  new-version:
    needs: [ test ]
    name: New Version
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    defaults:
      run:
        shell: bash

    outputs:
      new-release-version: ${{ steps.set-release-version.outputs.new-release-version }}

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GIT_TOKEN }}
          fetch-depth: 0

      - name: Set up JDK 17
        id: set-up-jdk
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          server-id: github
          settings-path: ${{ github.workspace }}

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2-

      - name: Set Release version env variable
        id: set-release-version
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
        run: |
          mvn build-helper:parse-version versions:set -DnewVersion=\${parsedVersion.majorVersion}.\${parsedVersion.minorVersion}.\${parsedVersion.nextIncrementalVersion} versions:commit --file pom.xml
          echo "new-release-version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

      - name: Echo Number New Release
        run: |
          echo "Release number: ${{ steps.set-release-version.outputs.new-release-version }}"

      - name: Push Action
        run: |
          git config --local user.name 'github-actions'
          git config --local user.email ${{ secrets.GIT_EMAIL }}
          git add .
          git commit -m "[GitHub Action] updated version in pom.xml"
          git push

  publish-image-registry:
    needs: [ new-version ]
    name: Publish Image Docker Registry
    runs-on: ubuntu-latest

    env:
      IMAGE_TAG: ${{ needs.new-version.outputs.new-release-version }}

    permissions:
      contents: read
      packages: write

    defaults:
      run:
        working-directory: park-tech
        shell: bash

    steps:
      - name: "Check out the repo"
        uses: "actions/checkout@v4"
        with:
          fetch-depth: 0

      - name: "docker login"
        uses: "docker/login-action@v2"
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: ${{ env.IMAGE_TAG }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./park-tech
          file: ./park-tech/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  tag:
    needs: [ new-version ]
    if: contains(github.head_ref, 'develop-test') && contains(github.base_ref, 'teste') && github.event.action == 'closed' && github.event.pull_request.merged == true
    name: Extract Branch Tag
    runs-on: ubuntu-latest

    outputs:
      tag: ${{ steps.tag.outputs.tag }}

    steps:
      - name: Extract branch tag
        id: tag
        run: |
          BRANCH=${{ github.head_ref }}
          TAG="${BRANCH//release-/""}"3
          echo $TAG
          echo "tag=$TAG" >> $GITHUB_ENV
          echo "::set-output name=tag::$TAG"

  release:
    needs: [ tag ]
    name: Create Release
    runs-on: ubuntu-latest
    env:
      TAG: ${{ needs.tag.outputs.tag }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Push tag
        uses: mathieudutour/github-tag-action@v6.1
        with:
          custom_tag: ${{ env.TAG }}
          github_token: ${{ secrets.GIT_TOKEN }}

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ env.TAG }}
          tag_name: ${{ env.TAG }}
          token: ${{ secrets.GIT_TOKEN }}
