name: AWS - Terraform UnDeployment

on:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:

    name: Terraform UnDeployment - AWS
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
    permissions:
      contents: read
      packages: write

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Executar ação manual
        run: echo "Hello, World!"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Set SSL verification to false
        run: git config --global http.sslVerify false

      - name: Setup Terraform CLI
        uses: hashicorp/setup-terraform@v2.0.2

      # ECR
      - name: Terraform init ECR
        run: |
          echo "** Running Terraform Init**"
          terraform init
        working-directory: terraform/ecr/env/hmg
      - name: Plan Terraform changes ECR
        run: |
          echo "** Running Terraform Destroy**"
          terraform destroy -auto-approve -input=false 
        working-directory: terraform/ecr/env/hmg

      # ECS
      - name: Terraform init ECS
        run: |
          echo "** Running Terraform Init**"

          export TF_VAR_uriDatabase=$URI_DATABASE
          export TF_VAR_imagemTag=$TAG_IMAGE
          export TF_VAR_parktechNasicAuthName=$PARK_TECH_BASIC_AUTH_NAME
          export TF_VAR_parktechNasicAuthPassword=$PARK_TECH_BASIC_AUTH_PASSWORD
          export TF_VAR_idConexaoPeeringMongoDB=$ID_CONEXAO_PEERING_MONGODB

          terraform init

        env:
          URI_DATABASE: ${{secrets.URI_DATABASE}}
          TAG_IMAGE: ${{env.TAG_IMAGE}}
          PARK_TECH_BASIC_AUTH_NAME: ${{secrets.PARK_TECH_BASIC_AUTH_NAME}}
          PARK_TECH_BASIC_AUTH_PASSWORD: ${{secrets.PARK_TECH_BASIC_AUTH_PASSWORD}}
          ID_CONEXAO_PEERING_MONGODB: ${{secrets.ID_CONEXAO_PEERING_MONGODB}}
        working-directory: terraform/ecs/env/hmg

      - name: Plan Terraform changes ECS
        run: |
          echo "** Running Terraform Destroy**"

          export TF_VAR_uriDatabase=$URI_DATABASE
          export TF_VAR_imagemTag=$TAG_IMAGE
          export TF_VAR_parktechNasicAuthName=$PARK_TECH_BASIC_AUTH_NAME
          export TF_VAR_parktechNasicAuthPassword=$PARK_TECH_BASIC_AUTH_PASSWORD
          export TF_VAR_idConexaoPeeringMongoDB=$ID_CONEXAO_PEERING_MONGODB

          terraform destroy -auto-approve -input=false 

        env:
          URI_DATABASE: ${{secrets.URI_DATABASE}}
          TAG_IMAGE: ${{env.TAG_IMAGE}}
          PARK_TECH_BASIC_AUTH_NAME: ${{secrets.PARK_TECH_BASIC_AUTH_NAME}}
          PARK_TECH_BASIC_AUTH_PASSWORD: ${{secrets.PARK_TECH_BASIC_AUTH_PASSWORD}}
          ID_CONEXAO_PEERING_MONGODB: ${{secrets.ID_CONEXAO_PEERING_MONGODB}}
        working-directory: terraform/ecs/env/hmg
